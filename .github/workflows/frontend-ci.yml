name: Frontend CI Pipeline

on:
  pull_request:
    branches:
      - main
    paths:
      - frontend/**
  push:
    branches:
      - main
  workflow_dispatch: null

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18"
      - name: Cache Node.js dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-modules-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-			  
      - name: Install Dependencies
        run: cd frontend && npm ci
      - name: Run Linting
        run: cd frontend && npm run lint

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18"
      - name: Cache Node.js dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-modules-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-		  
      - name: Install Dependencies
        run: cd frontend && npm ci
      - name: Run Unit Tests
        run: cd frontend/src/components/__tests__ && npm test

  build:
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18"
      - name: Cache Node.js dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-modules-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-		
      - name: Install Dependencies
        run: cd frontend && npm ci	
      - name: Run Unit Tests
        run: cd frontend/src/components/__tests__ && npm test		
      - name: Fix permissions for react-scripts
        run: |
          cd frontend
          chmod +x node_modules/.bin/react-scripts
      - name: Build Frontend Application
        run: cd frontend && npm run build
      - name: Build and Run Docker Image
        run: |
          cd frontend
          docker build --build-arg=REACT_APP_MOVIE_API_URL=http://localhost:5000 --tag=mp-frontend:latest .
          docker run --name mp-frontend -p 3000:3000 -d mp-frontend		
