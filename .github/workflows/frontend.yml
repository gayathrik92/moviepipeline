---
name: Frontend CI/CD Pipeline
on:
  pull_request:
    branches:
      - main
    paths:
      - frontend/**
  workflow_dispatch: null
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up Node.js (if applicable)
        uses: actions/setup-node@v2
        with:
          node-version: "18"
      - name: Install Dependencies
        run: cd frontend && npm ci
      - name: Run Unit Tests
        run: cd frontend && npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up Node.js (if applicable)
        uses: actions/setup-node@v2
        with:
          node-version: "18"
      - name: Install Dependencies
        run: cd frontend && npm ci
      - name: Run Unit Tests
        run: cd frontend/src/components/__tests__ && npm test
  build:
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Fix permissions for react-scripts
        run: |
          cd frontend
          chmod +x node_modules/.bin/react-scripts		
      - name: Build Frontend Application
        run: cd frontend && npm run build
      - name: Set up AWS credentials
        run: |
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
          echo "AWS_SESSION_TOKEN=${{ secrets.AWS_SESSION_TOKEN }}" >> $GITHUB_ENV
          echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> $GITHUB_ENV
      - name: Log in to AWS ECR using username and password
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.AWS_ECR_REPOSITORY }}
      - name: Log in to AWS ECR
        uses: aws-actions/amazon-ecr-login@v2
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
      - name: Build Docker image
        run: |
          cd frontend
          IMAGE_TAG="${{ secrets.REGISTRY_USERNAME }}:${{ github.sha }}"
          IMAGE_TAG_LOWERCASE=$(echo $IMAGE_TAG | tr '[:upper:]' '[:lower:]')
          docker build -t "$IMAGE_TAG_LOWERCASE" -f Dockerfile .
      - name: Push Docker image to AWS ECR
        run: |
          cd frontend
          IMAGE_TAG="${{ secrets.REGISTRY_USERNAME }}:${{ github.sha }}"
          IMAGE_TAG_LOWERCASE=$(echo $IMAGE_TAG | tr '[:upper:]' '[:lower:]')
          docker push "$IMAGE_TAG_LOWERCASE"
          docker push "${{ secrets.AWS_ECR_REPOSITORY }}:latest"
